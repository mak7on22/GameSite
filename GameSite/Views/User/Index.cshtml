@model GameSite.Models.UserProfileViewModel
@{
    ViewData["Title"] = "Profile";
}

<h2>Profile</h2>
@if (Model?.User != null)
{
    if (!string.IsNullOrEmpty(Model.User.AvatarPath))
    {
        <img src="@Model.User.AvatarPath" alt="avatar" class="img-thumbnail mb-2" style="max-width:150px;" />
    }
    <p>
        UserName: @Model.User.UserName
        @{
            var color = Model.User.Status switch
            {
                GameSite.Models.UserStatus.Online => "status-online",
                GameSite.Models.UserStatus.DoNotDisturb => "status-dnd",
                _ => "status-offline"
            };
        }
        <span class="status-dot @color"></span>
    </p>
    <p>Your ID: @Model.User.UniqueId</p>
    <p>Email: @Model.User.Email</p>
    <p>Balance: @Model.User.Balance.ToString("0") GameCoins</p>
    <p>XP: @Model.User.XP</p>
    <p>Rank: @Model.User.Rank</p>
    @if (Model.IsSelf)
    {
        <form asp-action="UpdateStatus" method="post" class="mb-2">
            <select name="status" class="form-select d-inline w-auto">
                <option value="@GameSite.Models.UserStatus.Online" @(Model.User.Status == GameSite.Models.UserStatus.Online ? "selected" : null)>Online</option>
                <option value="@GameSite.Models.UserStatus.DoNotDisturb" @(Model.User.Status == GameSite.Models.UserStatus.DoNotDisturb ? "selected" : null)>Do Not Disturb</option>
                <option value="@GameSite.Models.UserStatus.Offline" @(Model.User.Status == GameSite.Models.UserStatus.Offline ? "selected" : null)>Offline</option>
            </select>
            <button type="submit" class="btn btn-sm btn-secondary ms-1">Set</button>
        </form>
        <a asp-action="Edit" class="btn btn-primary">Edit profile</a>
    }
}

@if (Model?.Friends != null && Model.Friends.Any())
{
    <h4 class="mt-4">Friends</h4>
    <ul class="list-unstyled">
    @foreach (var f in Model.Friends)
    {
        <li class="mb-2">
            @if (!string.IsNullOrEmpty(f.FriendUser?.AvatarPath))
            {
                <img src="@f.FriendUser.AvatarPath" alt="avatar" width="40" height="40" class="rounded-circle me-2" />
            }
            <a asp-controller="User" asp-action="Details" asp-route-id="@f.FriendId">@f.FriendUser?.UserName</a>
            @{
                var color = f.FriendUser?.Status switch
                {
                    GameSite.Models.UserStatus.Online => "status-online",
                    GameSite.Models.UserStatus.DoNotDisturb => "status-dnd",
                    _ => "status-offline"
                };
            }
            <span class="status-dot @color"></span>
        </li>
    }
    </ul>
}

@if (Model?.Posts != null && Model.Posts.Any())
{
    <h4 class="mt-4">Posts</h4>
    @await Html.PartialAsync("_PostList", Model.Posts)
}
